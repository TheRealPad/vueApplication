@use 'sass:math';

.card {
  position: relative;
  width: 100%;
  height: 100%;
  perspective: 1000px;
}

.content {
  position: relative;
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
  background-size: contain, contain;
  background-position: center, center;
  background-repeat: no-repeat, repeat;
  transition: transform 0.3s ease-in-out;
  //background-image: url("https://images.pokemontcg.io/pgo/24_hires.png"), url("https://images.pokemontcg.io/pgo");

  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;

}

.isSelected {
  //transform: scale(1.5) rotateY(360deg);
  //z-index: 9999;
}

.image {
  width: 100%;
  height: 100%;
}

.cell {
  position: relative;
  height: 5%;
  width: 5%;
  z-index: 9999;
}

$columns: 20;
$rows: 20;
$total-elements: $columns * $rows;
$mid-column: calc($columns / 2);
$mid-row: calc($rows / 2);

@for $i from 1 through 1000 {
  .content:has(.cell:nth-child(#{$i}):hover) {
    $row: math.ceil(calc($i / $columns));
    $col: if($i % $columns == 0, $columns, $i % $columns);

    @if $row <= $mid-row and $col <= $mid-column {
      /* Top-left quadrant */
      transform: perspective(calc(var(--perspective) * 1px)) rotateY(calc((#{$mid-column} - #{$col}) * 1deg)) rotateX(calc((#{$mid-row} - #{$row}) * -1deg));
    } @else if $row <= $mid-row and $col > $mid-column {
      /* Top-right quadrant */
      transform: perspective(calc(var(--perspective) * 1px)) rotateY(calc((#{$col} - #{$mid-column}) * -1deg)) rotateX(calc((#{$mid-row} - #{$row}) * -1deg));
    } @else if $row > $mid-row and $col <= $mid-column {
      /* Bottom-left quadrant */
      transform: perspective(calc(var(--perspective) * 1px)) rotateY(calc((#{$mid-column} - #{$col}) * 1deg)) rotateX(calc((#{$row} - #{$mid-row}) * 1deg));
    } @else if $row > $mid-row and $col > $mid-column {
      /* Bottom-right quadrant */
      transform: perspective(calc(var(--perspective) * 1px)) rotateY(calc((#{$col} - #{$mid-column}) * -1deg)) rotateX(calc((#{$row} - #{$mid-row}) * 1deg));
    }
  }
}
